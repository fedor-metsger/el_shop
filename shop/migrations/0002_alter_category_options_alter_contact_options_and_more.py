# Generated by Django 4.2.6 on 2023-10-29 13:00

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("shop", "0001_initial"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="category",
            options={
                "ordering": ("-name",),
                "verbose_name": "категория",
                "verbose_name_plural": "список категорий",
            },
        ),
        migrations.AlterModelOptions(
            name="contact",
            options={
                "verbose_name": "контакты пользователя",
                "verbose_name_plural": "список контактов пользователя",
            },
        ),
        migrations.AlterModelOptions(
            name="order",
            options={
                "ordering": ("-dt",),
                "verbose_name": "заказ",
                "verbose_name_plural": "список заказ",
            },
        ),
        migrations.AlterModelOptions(
            name="orderitem",
            options={
                "verbose_name": "заказанная позиция",
                "verbose_name_plural": "список заказанных позиций",
            },
        ),
        migrations.AlterModelOptions(
            name="parameter",
            options={
                "ordering": ("-name",),
                "verbose_name": "имя параметра",
                "verbose_name_plural": "список имен параметров",
            },
        ),
        migrations.AlterModelOptions(
            name="product",
            options={
                "ordering": ("-name",),
                "verbose_name": "продукт",
                "verbose_name_plural": "список продуктов",
            },
        ),
        migrations.AlterModelOptions(
            name="productinfo",
            options={
                "verbose_name": "информация о продукте",
                "verbose_name_plural": "информационный список о продуктах",
            },
        ),
        migrations.AlterModelOptions(
            name="productparameter",
            options={
                "verbose_name": "параметр",
                "verbose_name_plural": "список параметров",
            },
        ),
        migrations.AlterModelOptions(
            name="shop",
            options={
                "ordering": ("-name",),
                "verbose_name": "магазин",
                "verbose_name_plural": "список магазинов",
            },
        ),
        migrations.AlterField(
            model_name="category",
            name="name",
            field=models.CharField(max_length=40, verbose_name="название"),
        ),
        migrations.AlterField(
            model_name="category",
            name="shops",
            field=models.ManyToManyField(
                blank=True,
                related_name="categories",
                to="shop.shop",
                verbose_name="магазины",
            ),
        ),
        migrations.AlterField(
            model_name="contact",
            name="apartment",
            field=models.CharField(blank=True, max_length=15, verbose_name="квартира"),
        ),
        migrations.AlterField(
            model_name="contact",
            name="building",
            field=models.CharField(blank=True, max_length=15, verbose_name="строение"),
        ),
        migrations.AlterField(
            model_name="contact",
            name="city",
            field=models.CharField(max_length=50, verbose_name="город"),
        ),
        migrations.AlterField(
            model_name="contact",
            name="house",
            field=models.CharField(blank=True, max_length=15, verbose_name="дом"),
        ),
        migrations.AlterField(
            model_name="contact",
            name="phone",
            field=models.CharField(max_length=20, verbose_name="телефон"),
        ),
        migrations.AlterField(
            model_name="contact",
            name="street",
            field=models.CharField(max_length=100, verbose_name="улица"),
        ),
        migrations.AlterField(
            model_name="contact",
            name="structure",
            field=models.CharField(blank=True, max_length=15, verbose_name="корпус"),
        ),
        migrations.AlterField(
            model_name="contact",
            name="user",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contacts",
                to=settings.AUTH_USER_MODEL,
                verbose_name="пользователь",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="contact",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="shop.contact",
                verbose_name="контакт",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="state",
            field=models.CharField(
                choices=[
                    ("basket", "Статус корзины"),
                    ("new", "Новый"),
                    ("confirmed", "Подтвержден"),
                    ("assembled", "Собран"),
                    ("sent", "Отправлен"),
                    ("delivered", "Доставлен"),
                    ("canceled", "Отменен"),
                ],
                max_length=15,
                verbose_name="статус",
            ),
        ),
        migrations.AlterField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orders",
                to=settings.AUTH_USER_MODEL,
                verbose_name="пользователь",
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="order",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ordered_items",
                to="shop.order",
                verbose_name="заказ",
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="product_info",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ordered_items",
                to="shop.productinfo",
                verbose_name="информация о продукте",
            ),
        ),
        migrations.AlterField(
            model_name="orderitem",
            name="quantity",
            field=models.PositiveIntegerField(verbose_name="количество"),
        ),
        migrations.AlterField(
            model_name="parameter",
            name="name",
            field=models.CharField(max_length=40, verbose_name="название"),
        ),
        migrations.AlterField(
            model_name="product",
            name="category",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="products",
                to="shop.category",
                verbose_name="категория",
            ),
        ),
        migrations.AlterField(
            model_name="product",
            name="name",
            field=models.CharField(max_length=80, verbose_name="название"),
        ),
        migrations.AlterField(
            model_name="productinfo",
            name="external_id",
            field=models.PositiveIntegerField(verbose_name="внешний ID"),
        ),
        migrations.AlterField(
            model_name="productinfo",
            name="model",
            field=models.CharField(blank=True, max_length=80, verbose_name="модель"),
        ),
        migrations.AlterField(
            model_name="productinfo",
            name="price",
            field=models.PositiveIntegerField(verbose_name="цена"),
        ),
        migrations.AlterField(
            model_name="productinfo",
            name="price_rrc",
            field=models.PositiveIntegerField(
                verbose_name="рекомендуемая розничная цена"
            ),
        ),
        migrations.AlterField(
            model_name="productinfo",
            name="product",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_infos",
                to="shop.product",
                verbose_name="продукт",
            ),
        ),
        migrations.AlterField(
            model_name="productinfo",
            name="quantity",
            field=models.PositiveIntegerField(verbose_name="количество"),
        ),
        migrations.AlterField(
            model_name="productinfo",
            name="shop",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_infos",
                to="shop.shop",
                verbose_name="магазин",
            ),
        ),
        migrations.AlterField(
            model_name="productparameter",
            name="parameter",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_parameters",
                to="shop.parameter",
                verbose_name="параметр",
            ),
        ),
        migrations.AlterField(
            model_name="productparameter",
            name="product_info",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="product_parameters",
                to="shop.productinfo",
                verbose_name="информация о продукте",
            ),
        ),
        migrations.AlterField(
            model_name="productparameter",
            name="value",
            field=models.CharField(max_length=100, verbose_name="значение"),
        ),
        migrations.AlterField(
            model_name="shop",
            name="name",
            field=models.CharField(max_length=50, verbose_name="название"),
        ),
        migrations.AlterField(
            model_name="shop",
            name="url",
            field=models.URLField(blank=True, null=True, verbose_name="ссылка"),
        ),
        migrations.AlterField(
            model_name="shop",
            name="user",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="пользователь",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(
                max_length=254, unique=True, verbose_name="адрес email"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Обозначает, должен ли этот пользователь считаться активным. Снимите выделение вместо удаления пользователя.",
                verbose_name="active",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="type",
            field=models.CharField(
                choices=[("shop", "Магазин"), ("buyer", "Покупатель")],
                default="покупатель",
                max_length=5,
                verbose_name="Тип пользователя",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                error_messages={
                    "unique": "Пользователь с таким именем уже существует."
                },
                help_text="Необходимо. 150 или меньше символов. Только буквы, цифры и знаки @/./+/-/_",
                max_length=150,
                validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                verbose_name="username",
            ),
        ),
    ]
